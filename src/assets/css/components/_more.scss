.#{$namespace}more {
	
	/* Save root element context for easy access if nesting is needed */
	
	$self: &;
	
	
	/* variables specific to current element */
	
	$stroke-width: 0.25em;
	
	
	/* properties of current element  + media queries */
	
	position: absolute;
	bottom: 0;
	left: 1em;
	width: 4em;
	height: 4em;

	@include media-breakpoint-up(sm) {

		width: 5em;
		height: 5em;

	}
	
	@include media-breakpoint-up(md) {
		
		left: 2em;
		
	}
	
	@include media-breakpoint-up(lg) {
		
		width: 6em;
		height: 6em;
		
	}
	
	/* Pseudo Elements */
	
	&::before {
	
	}
	
	&::after {
	}
	
	/*
	Include elements that are linked to the current element but have to reside at the root level of the stylesheet
	(e.g: keyframes)
	*/
	@at-root {
	}
	
	
	/* children - write selector in full in comments in order to facilitate search */
	
	// more__inner
	&__inner {
		
		// follows same logic as parent
		
		width: 2em;
		height: 2em;
		border-width: $stroke-width $stroke-width 0 0;
		border-style: solid;
		transform: rotate(135deg);
		color: $action-color;
		.customproperties & {
			color: var(--THEME-ACTION);
		}
		position: relative;
		transition: all 0.2s ease-out;
		
		&::before {
			
			content:"";
			right: 0;
			top: -3px;
			position: absolute;
			width: 3em;
			height: $stroke-width;
			box-shadow: inset 0 0 0 32px;
			transform: rotate(-45deg);
			transform-origin: right top;
			
		}
		
	}
	
	
	/* modifiers */
	
	// more -altStyle
	&.-altStyle {
		
		// follows same logic as base element
		
	}
	
	
	/* Pseudo Classes */
	
	&:hover {
		@media (hover: hover) {
			#{$self}__inner {
				transform: translateY(10%) rotate(135deg);
			}
		}
	}
	
	&:focus {
	}
	
	&:active {
	}
	
	&:focus,
	&:active {
	}
	
	/* random parent element */
	/* 
	*
	*   Syntax : .randomParentElt & {}
	*
	*/
	
}