.#{$namespace}hero {
	
	/* Save root element context for easy access if nesting is needed */
	
	$self: &;
	
	
	/* variables specific to current element */
	
	$hero-outermost-padding: 2em;
	
	/* properties of current element  + media queries */
	
	position: relative;
	flex-grow: 1;
	height: 95vh;
	@include media-breakpoint-up(md) {

	}
	
	&::after {
	}
	
	/*
	Include elements that are linked to the current element but have to reside at the root level of the stylesheet
	(e.g: keyframes)
	*/
	@at-root {
	}
	
	
	/* children - write selector in full in comments in order to facilitate search */
	
	
	//hero__inner
	&__inner {
		
		position: relative;
		padding: 1em;
		padding-bottom: 2em;
		height: 100%;
		
		@include media-breakpoint-up(md) {
			padding: 0;
		}
		
	}
	
	&__titleArea {
	
	
	}
	
	// hero__title
	&__title {
		
		min-height: 0 !important;
		position: relative;
		z-index: z("low");
		font-family: $title-font;
		font-size: 3rem;
		width: 100%;
		text-transform: uppercase;
		letter-spacing: 0.015em;
		//background-color: var(--THEME-BG-PRIMARY);
		
		@include media-breakpoint-up(sm) {
			//text-align: right;
			font-size: 3.5rem;
		}
		
		@include media-breakpoint-up(md) {
			//margin-right: $grid-gutter-width*3;
		}
		
		@include media-breakpoint-up(lg) {
			font-size: 4.5rem;
		}
		
		@media screen and (min-width: 1500px) {
			font-size: 5.5rem;
		}

	}

	 &__titleSeparator {

		 font-size: 3em;
		 padding: 1em 0;

	}
	
	// hero__title
	&__subTitle {
		//position: absolute;
		//transform: rotate(-90deg) translateY(100%);
		//transform-origin: bottom left;
		bottom: 0;
		left: 0;
		white-space: nowrap;
		margin: 0;
		text-transform: uppercase;
		padding-right: 0.25em;
		line-height: 0.75;
		@include media-breakpoint-up(sm) {
			//transform: rotate(90deg) translate(0);
			right: 0;
			left: auto;
			//transform-origin: bottom right;
			padding: 0.35em 0 0.25em 0.25em;
			//background-color: #fff;
			//.customproperties & {
			//	background-color: var(--THEME-BG);
			//}
			background-color: $primary-bg-color;
			.customproperties & {
				background-color: var(--THEME-BG-PRIMARY);
			}
		}
	}

	&__subTitleWrapper {

		position: absolute;
		bottom: 0;
		right: 5em;

		//width: 0;

		@include media-breakpoint-up(md) {

			position: relative;
			margin-top: 150%;

		}
	}
	
	// hero__childElement
	&__imgWrapper {
		
		// follows same logic as parent
		display: flex;
		align-items: center;
		position: relative;
		min-width: 5em;

		@include media-breakpoint-up(md) {

			padding-left: 5em;
			padding-right: 3em;
			transform: rotate(5deg);

		}

		&::after {
			
			content: "";
			position: absolute;
			top: 1em;
			left: 1em;
			bottom: 1em;
			width: 2.5em;
			background: repeating-linear-gradient(var(--THEME-BG) 0em 3em, transparent 3em 4em);

		}	

		&::before {
			
			content:"";
			background-color: $primary-bg-color;
			.customproperties & {
				background-color: var(--THEME-BG-PRIMARY);
			}
			position: absolute;
			z-index: z("negative");
			inset: 0;
			transition: all 0.25s linear;
			
			//@include media-breakpoint-up(sm) {
			//	left: 5em;
			//	right: -3em;
			//	bottom: 5em;
			//	top: -50vh;
			//}
			//
			//@include media-breakpoint-up(md) {
			//
			//	bottom: 6em;
			//
			//}
			
		}
		
		@include media-breakpoint-up(sm) {
			//flex-direction: row-reverse;
		}
		@include media-breakpoint-up(md) {
			display: flex;
			margin-left: $grid-gutter-width;
			height: 90%;
		}
		
	}

	&__more#{$self}__more {

		background-color: $body-color;
		right: 0;
		bottom: -0.75em;
		left: auto;
		transform: translateX(50%) rotate(-5deg);
		.customproperties & {
			background-color: var(--THEME-BG);
		}
		border-radius: 50%;
		align-items: center;
		justify-content: center;

	}
	
	&__img {
		max-height: 70vh;
		max-width: 100%;
		@include media-breakpoint-up(md) {
			max-width: 350px;
		}
		@include media-breakpoint-up(lg) {
			max-width: 450px;
			max-height: 70vh;
		}
	}
	
	
	/* modifiers */
	
	// hero -altStyle
	&.-altStyle {
		
		// follows same logic as base element
		
	}
	
	
	/* Pseudo Classes */
	
	&:hover {
		@media (hover: hover) {
		
		}
	}
	
	&:focus {
	}
	
	&:active {
	}
	
	&:focus,
	&:active {
	}
	
	/* random parent element */
	/*
	*
	*   Syntax : .randomParentElt & {}
	*
	*/
	
}