.#{$namespace}videoCard {
	
	/* Save root element context for easy access if nesting is needed */
	
	$self: &;
	
	
	/* variables specific to current element */
	
	$play-dimensions: 3.5rem;
	$play-dimensions-md: 4.5rem;
	
	/* properties of current element  + media queries */
	
	padding-top: 1em;
	padding-bottom: 1em;
	
	& + & {
		
		margin-top: map_get($spacers, 8);
		
	}
	
	@include media-breakpoint-up(md) {
		
		display: flex;
		align-items: center;
		padding-top: 4em;
		padding-bottom: 4em;
		
		& + & {
			
			margin-top: map_get($spacers, 10);
			
		}
		
	}
	/* Pseudo Elements */
	
	&::before {
	
	}
	
	&::after {
	}
	
	/*
	Include elements that are linked to the current element but have to reside at the root level of the stylesheet
	(e.g: keyframes)
	*/
	@at-root {
	}
	
	
	/* children - write selector in full in comments in order to facilitate search */
	
	&__video {
		
		position: relative;
		cursor: pointer;
		
		&::before {
			
			transition: all 0.25s ease-out;
			content: "";
			position: absolute;
			z-index: z("negative");
			top: -1em;
			bottom: -2.75em;
			left: -1em;
			right: 1em;
			background-color: $lightblue;
			will-change: width;
			
			@include media-breakpoint-up(md) {
				width: 100%;
				top: -4em;
				bottom: -4em;
				right: -4em;
				left: auto;
			}
			
		}
		
		@include media-breakpoint-up(md) {
			@include make-col(6);
		}
		
		&:hover {
			
			@media (hover: hover) {
				
				&::before {
					width: calc(50vw + 1.75em);
					background-color: $dark;
					right: -1.75em;
				}
				
				#{$self}__play {
					transform: translate(-50%, -50%) scale(0.75);
				}
				
			}
			
		}
		
	}
	
	&__embeddedItem#{$self}__embeddedItem {
		
		width: auto;
		height: auto;
		top: -20%;
		right: -20%;
		bottom: -20%;
		left: -20%;
		filter: grayscale(100%);
		transition: filter 0.5s linear;
		
	}
	
	// videoCard__childElement
	&__content {
		
		// follows same logic as parent
		
		color: $dark;
		padding: 2rem 0 0;
		
		@include media-breakpoint-up(md) {
			@include make-col(6);
			padding: 0 0 0 2.5em;
		}
		
		@media (hover: hover) {
			
			&:hover {
				
				#{$self}__more {
					
					color: $dark;
					background-size: 100% 50%;
					
				}
				
			}
			
		}
	}
	
	&__title {
		
		font-size: 1.5em;
		line-height: 1.2;
		transition: transform 0.25s linear;
	}
	
	&__titleInner {
		
		//@include textUnderlineGradient(#fff, 0 0.65em, 100% 50%);
		
	}
	
	&__play {
		
		width: $play-dimensions;
		height: $play-dimensions;
		position: absolute;
		bottom: 1em;
		left: 1em;
		transition: all 0.15s linear;
		cursor: pointer;
		background-image: url("#{$mediaPath}play-button.svg");
		
		@include media-breakpoint-up(md) {
			top: 50%;
			left: 50%;
			bottom: auto;
			transform: translate(-50%, -50%);
			width: $play-dimensions-md;
			height: $play-dimensions-md;
		}
		
	}
	
	&__more {
		
		color: $crimson;
		@include textUnderlineGradient($crimson,0 0.65em,0 50%);
		transition: color 0.25s linear, background-size 0.25s ease-out;
		font-weight: 900;
		
		@include media-breakpoint-up(md) {
			margin-left: auto;
		}
		
	}
	
	
	/* modifiers */
	
	// videoCard -hasShapeInverted
	&.-hasShapeInverted {
		
		flex-direction: row-reverse;
		
		#{$self}__video {
			
			@include media-breakpoint-up(md) {
				
				&::before {
					left: -4em;
					right: auto;
				}
				
			}
			
			&:hover {
				@media (hover: hover) {
					
					&::before {
						left: -1.75em;
					}
					
				}
			}
			
		}
		
		#{$self}__description {
			
			@include media-breakpoint-up(md) {
				padding-right: 1.5em;
				padding-left: 0;
			}
			
		}
		
		#{$self}__content {
			
			// follows same logic as parent
			
			@include media-breakpoint-up(md) {
				padding: 0 2.5em 0 0;
			}
		}
		
		#{$self}__more {
			
			@include media-breakpoint-up(md) {
				margin-left: 0;
				margin-right: auto;
			}
			
		}
		
	}
	
	/* Pseudo Classes */
	
	&:hover {
		
		@media (hover: hover) {
			
			#{$self}__embeddedItem {
				filter: grayscale(0);
			}
			
		}
		
	}
	
	&:focus {
	}
	
	&:active {
	}
	
	&:focus,
	&:active {
	}
	
	/* random parent element */
	/* 
	*
	*   Syntax : .randomParentElt & {}
	*
	*/
	
}